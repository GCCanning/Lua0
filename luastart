-- CC: Tweaks Advanced Computer Interface with Basalt UI
-- Features: Login Screen, Objectives List (Editable via Terminal), Redstone Control, Power Monitoring, Background Music

-- Install Basalt if not present
shell.run("wget run https://basalt.madefor.cc/install.lua release latest.lua")

local basalt = require("basalt")
local main = basalt.createFrame()

local username = "TheNameOfTheVoid"
local objectives = {"Build storage room", "Expand farm", "Automate smelter"}
local redstoneControls = {"Door", "Lights", "Alarm"}
local sides = {"left", "right", "back"} -- Redstone output sides
local monitor = peripheral.find("monitor") -- Auto-detect the first monitor
local powerPeripheral = peripheral.find("energy_storage") -- Adjust based on mod used
local speaker = peripheral.find("speaker") -- Auto-detect speaker for background music
local scrollIndex = 1

-- Utility Functions
function addObjective(input)
    if input ~= "" then
        table.insert(objectives, input)
    end
    objectivesScreen()
end

function editObjective(index, input)
    if input:lower() == "delete" then
        table.remove(objectives, index)
    elseif input ~= "" then
        objectives[index] = input
    end
    objectivesScreen()
end

-- UI Elements
function loginScreen()
    main:clear()
    local frame = main:addFrame():setSize("parent.w", "parent.h")
    frame:addLabel():setText("== Login Screen =="):setPosition("center", 3)
    frame:addLabel():setText("Press anywhere to continue"):setPosition("center", 6)
    frame:onClick(function() mainMenu() end)
end

function mainMenu()
    main:clear()
    local frame = main:addFrame():setSize("parent.w", "parent.h")
    frame:addButton():setText("Current Objectives"):setPosition("center", 6):onClick(objectivesScreen)
    frame:addButton():setText("Control Panel"):setPosition("center", 8):onClick(controlPanel)
    frame:addButton():setText("Power Status"):setPosition("center", 10):onClick(powerStatus)
    frame:addButton():setText("Exit"):setPosition("center", 12):onClick(function() shell.exit() end)
end

function objectivesScreen()
    main:clear()
    local frame = main:addFrame():setSize("parent.w", "parent.h")
    frame:addButton():setText("⬅ Back"):setPosition(2, 3):onClick(mainMenu)
    frame:addLabel():setText("== Current Objectives =="):setPosition("center", 3)
    
    for i, obj in ipairs(objectives) do
        frame:addButton():setText(i .. ") " .. obj):setPosition(5, 5 + i * 2):onClick(function()
            local input = frame:addInput():setPosition(5, 5 + i * 2)
            input:onLoseFocus(function() editObjective(i, input:getValue()) end)
        end)
    end
    
    frame:addButton():setText("+ Add Objective"):setPosition("center", "parent.h - 2"):onClick(function()
        local input = frame:addInput():setPosition("center", "parent.h - 4")
        input:onLoseFocus(function() addObjective(input:getValue()) end)
    end)
end

function controlPanel()
    main:clear()
    local frame = main:addFrame():setSize("parent.w", "parent.h")
    frame:addButton():setText("⬅ Back"):setPosition(2, 3):onClick(mainMenu)
    frame:addLabel():setText("== Control Panel =="):setPosition("center", 3)
    for i, device in ipairs(redstoneControls) do
        frame:addButton():setText(device):setPosition(5, 5 + i * 2):onClick(function()
            redstone.setOutput(sides[i], not redstone.getOutput(sides[i]))
        end)
    end
end

function powerStatus()
    main:clear()
    local frame = main:addFrame():setSize("parent.w", "parent.h")
    frame:addButton():setText("⬅ Back"):setPosition(2, 3):onClick(mainMenu)
    frame:addLabel():setText("== Power Status =="):setPosition("center", 3)
    if powerPeripheral then
        local energy = powerPeripheral.getEnergyStored()
        frame:addLabel():setText("Energy Stored: " .. energy):setPosition("center", 6)
    else
        frame:addLabel():setText("No power monitoring available."):setPosition("center", 6)
    end
end

-- Start program
loginScreen()
basalt.autoUpdate()
